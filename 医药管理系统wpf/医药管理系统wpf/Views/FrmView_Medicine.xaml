<Window x:Class="医药管理系统wpf.FrmView_Medicine"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:医药管理系统wpf"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="药品管理" Height="643" Width="806"
        WindowStartupLocation="CenterScreen"
        >
    <Window.Resources>
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="20"></Setter>
        </Style>

        <Style TargetType="GroupBox">
            <Setter Property="FontSize" Value="17"></Setter>
        </Style>

        <!-- 删除按钮样式 -->
        <Style x:Key="DeleteButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Red"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="DarkRed"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <!-- 编辑按钮样式 -->
        <Style x:Key="EditButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Green"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="DarkGreen"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <!--设置行样式-->
        <Style x:Key="dgRowStyle" TargetType="DataGridRow">

            <Style.Triggers>
                <!-- 当IsSelected为True时，设置背景为Green -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Green" />
                </Trigger>

                <!-- 当IsMouseOver为True时，设置背景为#f4f6ee -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#f4f6ee" />
                </Trigger>

                <!-- 当同时满足IsSelected为True和IsMouseOver为True时，设置背景为绿色，覆盖上面的设置 -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="Green" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <!--设置表格样式-->
        <Style x:Key="dgCellStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="White"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="10*"></RowDefinition>
            <RowDefinition Height="20*"></RowDefinition>
            <RowDefinition Height="70*"></RowDefinition>
            <RowDefinition Height="20*"></RowDefinition>
        </Grid.RowDefinitions>
        
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="23">药品管理系统</TextBlock>
        <Border Margin="50 0 50 0" BorderBrush="Black" BorderThickness="0 0 0 1"></Border>
        
        <!--筛选框-->
        <GroupBox Grid.Row="1" Header="请选择查询的信息(默认查询全部)：" Margin="20 0 20 0">
            <GroupBox.Content>
                <Grid Grid.Row="1" Margin="10 0 10 0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Content="编号："></Label>
                    <TextBox Text="{Binding Mno}" Margin="60 5 5 5"></TextBox>

                    <Label Grid.Column="1" Content="服用方法："></Label>
                    <ComboBox ItemsSource="{Binding MmodeSource}" SelectedItem="{Binding MmodeSeleted}" Grid.Column="1" Margin="100 5 5 5"></ComboBox>

                    <Label Grid.Row="1" Content="名称："></Label>
                    <TextBox Text="{Binding Mname}" Grid.Row="1" Grid.Column="0" Margin="70 5 5 5"></TextBox>

                    <Label Grid.Row="1" Grid.Column="1" Content="功效："></Label>
                    <TextBox Text="{Binding Mefficacy}" Grid.Row="1" Grid.Column="1" Margin="70 5 5 5"></TextBox>

                    <Button Command="{Binding QueryCommand}" Grid.Row="1" Grid.Column="2" Width="80" Height="30" Content="查询"/>
                </Grid>
            </GroupBox.Content>
        </GroupBox>

        <!--数据网格-->
        <DataGrid x:Name="dataGrid" ItemsSource="{Binding Medicines}" Margin="8" Grid.Row="2"
                  CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True"
                  >
            <DataGrid.Columns>
                <DataGridTextColumn Header="编号" Binding="{Binding Mno}" Width="180"></DataGridTextColumn>
                <DataGridTextColumn Header="名称" Binding="{Binding Mname}" Width="50"></DataGridTextColumn>
                <DataGridTextColumn Header="服用方法" Binding="{Binding Mmode}" Width="150"></DataGridTextColumn>
                <DataGridTextColumn Header="功效" Binding="{Binding Mefficacy}" Width="150"></DataGridTextColumn>

                
                <!--操作里面的两个按钮-->
                <DataGridTemplateColumn Header="操作" Width="200">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="删除" Style="{StaticResource DeleteButtonStyle}"
                                        CommandParameter="{Binding Mno}"
                                        Command="{Binding DataContext.DelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"></Button>

                                <Button Content="编辑" Style="{StaticResource EditButtonStyle}"
                                        CommandParameter="{Binding Mno}"
                                        Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            
            <!--右键-->
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="删除" Command="{Binding DeleteSelectedCommand}"></MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>

            <!--行样式-->
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource dgRowStyle}" TargetType="DataGridRow">
                </Style>
            </DataGrid.RowStyle>

            <!--表格样式-->
            <DataGrid.CellStyle>
                <Style BasedOn="{StaticResource dgCellStyle}" TargetType="DataGridCell">
                </Style>
            </DataGrid.CellStyle>

            <!--双击编辑-->
            <!--需要添加i的命名空间-->
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem.Mno, ElementName=dataGrid}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

        </DataGrid>
        
    </Grid>
</Window>
